name: Sync Submodules from Main

on:
  repository_dispatch:
    types: [submodule-main-updated]
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT_TOKEN }}
        submodules: recursive
        
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Update submodules from main
      run: |
        # Update all submodules to the latest commit from their respective branches
        git submodule update --remote
        
        # Loop through submodules to find changes
        for submodule in $(git submodule status | awk '{print $2}'); do
          echo "Entering '$submodule'" >> "${submodule}-changes.txt"
          LAST_COMMIT=$(cd "$submodule" && git log -1 --pretty=format:"- %s (%an) %ad" --date=short)
          
          # Append last commit info to the corresponding file
          echo "$LAST_COMMIT" >> "${submodule}-changes.txt"
          
          # Check if there are any changes in the submodule
          if [[ -n $(git diff --name-only "$submodule") ]]; then
            cd "$submodule"
            git add .
            COMMIT_MESSAGE="Updated submodule: $submodule\n$LAST_COMMIT"
            git commit -m "$COMMIT_MESSAGE"
            cd -
          fi
        done

        # Check for changes in the main repository and commit if there are any
        if [[ -n $(git status --porcelain) ]]; then
          git add .
          COMMIT_MESSAGE=$(cat MITP-backend-changes.txt MITP-frontend-changes.txt MITP-mobile-changes.txt | tr '\n' '\n\n')
          git commit -m "$COMMIT_MESSAGE"
          git push
        else
          echo "No changes to sync"
          exit 0
        fi
